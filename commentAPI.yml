openapi: 3.0.3
info:
  title: 留言板API
  description: |-
    提供登入與登出功能，並提供查詢所有留言、使用者的所有留言及新增、編輯、刪除的功能，並可以抓取回覆的對應留言，也可對回覆的留言進行新增、編輯、刪除的功能。
  version: '1.0'

tags:
  - name: Users
    description: 關於使用者登入、登出與註冊。
  - name: Comments
    description: 關於使用者留言的新增、刪除、修改、查看功能。
  - name: Replies
    description: 關於使用者回覆留言的新增、刪除、修改、查看功能。
servers:
  - url: http://127.0.0.1:8000/api
paths:
  /v1/register:
    post:
      tags:
        - Users
      summary: 使用者註冊帳號
      requestBody:
        $ref: '#/components/requestBodies/Register'
      responses:
        '200':
          description: 註冊成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: 註冊失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                success: false
                message: The email has already been taken.
  /v1/login:
    post:
      tags:
        - Users
      summary: 使用者登入
      requestBody:
        $ref: '#/components/requestBodies/Login'
      responses:
        '200':
          description: 登入成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: 登入失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                success: false
                message: Unauthorized
  /v1/logout:
    post:
      tags:
        - Users
      summary: 使用者登出
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 登出成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                success: true
                message: 'Successfully logged out'
  /v1/refreshToken:
    post:
      tags:
        - Users
      summary: Token刷新
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功刷新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshToken'
        '401':
          description: 刷新失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: Unauthenticated.

  /comments:
    get:
      tags:
        - Comments
      summary: 取得所有留言
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '500':
          $ref: '#/components/responses/500'
            
    post:
      tags:
        - Comments
      summary: 新增留言
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/AddComment'
      responses:
        '200':
          description: 新增成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                success: true
                message: Successfully create message!
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /comments/{comment}:
    get:
      tags:
        - Comments
      summary: 取得單一篇留言
      parameters:
        - name: comment
          in: path
          description: 留言的ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 成功取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Comments
      summary: 修改留言
      security:
        - bearerAuth: []
      parameters:
        - name: comment
          in: path
          description: 留言的ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/PutModifyComment'
      responses:
        '200':
          description: 修改成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                success: true
                message: Successfully update.
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Comments
      summary: 刪除留言
      security:
        - bearerAuth: []
      parameters:
        - name: comment
          in: path
          description: 使用者要回覆那一篇留言的ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 刪除成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                success: true
                message: Successfully delete.
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /author/{user}/comments:
    get:
      tags:
        - Comments
      summary: 取得使用者所有的留言
      parameters:
        - name: user
          in: path
          description: 使用者的ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 成功取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: 找不到這位作者
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                success: false
                message: Requested resource not found
        '500':
          $ref: '#/components/responses/500'
  /comments/{comment}/replies:
    get:
      tags:
        - Replies
      summary: 取得留言{comment}的所有回覆
      parameters:
        - name: comment
          in: path
          description: 留言的ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  comment_id:
                    type: string
                    format: uuid
                  replies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
        '404':
          description: 找不到這位作者
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                success: false
                message: Requested resource not found
        '500':
          $ref: '#/components/responses/500'
  /replies:
    post:
      tags:
        - Replies
      summary: 新增回覆的留言
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/AddReply'
      responses:
        '200':
          description: 新增成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                success: true
                message: Successfully reply message!
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /replies/{reply}:
    put:
      tags:
        - Replies
      summary: 修改回覆的留言
      security:
        - bearerAuth: []
      parameters:
        - name: reply
          in: path
          description: 使用者要回覆那一篇留言的ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/PutModifyComment'
      responses:
        '200':
          description: 修改成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                success: true
                message: Successfully update.
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Replies
      summary: 刪除回覆的留言
      security:
        - bearerAuth: []
      parameters:
        - name: reply
          in: path
          description: 使用者要回覆那一篇留言的ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 刪除成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                success: true
                message: Successfully delete.
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

    

components:
  schemas:
    MessageResponse:
      type: object
      properties:
        success: 
          type: string
        message: 
          type: string
    Comment:
      type: object
      properties:
        id: 
          type: string
          format: uuid
          example: 27565488-ab14-431d-93f9-867d7292578d
        message:
          type: string
          example: Today is a nice day.
        created_at:
          type: string
          format: date-time
          example: 2022-10-29 10:13:34
        updated_at:
          type: string
          format: date-time
          example: 2022-10-29 10:13:34
        user:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: 27565488-ab14-431d-93f9-867d7292578d
            name:
              type: string
              example: Guest
    CommentPut:
      type: object
      properties:
        comment_id: 
          type: string
          format: uuid
          example: 27565488-ab14-431d-93f9-867d7292578d
        message:
          type: string
          example: Today is a nice day.
    User:
      type: object
      properties:
        user_id: 
          type: string
          format: uuid
          example: 27565488-ab14-431d-93f9-867d7292578d
        name:
          type: string
          example: Guest
        messages:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
                format: uuid
                example: 27565488-ab14-431d-93f9-867d7292578d
              message:
                type: string
                example: Today is a nice day.
              created_at:
                type: string
                format: date-time
                example: 2022-10-29 10:13:34
              updated_at:
                type: string
                format: date-time
                example: 2022-10-29 10:13:34
    PostRequest:
      type: object
      properties:
        message:
          type: string
          example: Today is a nice day.
        user_id:
          type: string
          format: uuid
          example: 27565488-ab14-431d-93f9-867d7292578d
    ReplyPostRequest:
      type: object
      properties:
        message:
          type: string
          example: Today is a nice day.
        comment_id:
          type: string
          format: uuid
          example: 27565488-ab14-431d-93f9-867d7292578d
        user_id:
          type: string
          format: uuid
          example: 27565488-ab14-431d-93f9-867d7292578d
    PutRequest:
      type: object
      properties:
        message:
          type: string
          example: This is a wrong day.
    LoginRequest:
      type: object
      properties:
        email: 
          type: string
          example: test@example.com
        password:
          type: string
    RegisterRequest:
      type: object
      properties:
        name: 
          type: string
          example: Guest
        email: 
          type: string
          example: test@example.com
        password: 
          type: string
        password_confirmation:
          type: string
    Authorization:
      type: object
      properties:
        type: 
          type: string
          example: bearer
        token: 
          type: string
          example: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDEvYXBpL3YxL2xvZ2luIiwiaWF0IjoxNjY2OTUwNDExLCJleHAiOjE2NjY5NTQwMTEsIm5iZiI6MTY2Njk1MDQxMSwianRpIjoidUFhQ2VWSzRObkEwV2s2SCIsInN1YiI6IjAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.paFCi8Kkn1W1IPkkhuMfnaFxJEhq5VSitAUdOv7pvdc'
    LoginResponse:
      type: object
      properties:
        message: 
          type: string
          example: success
        data: 
          type: object
          properties:
            user: 
              type: object
              properties:
                id: 
                  type: string
                  example: 27565488-ab14-431d-93f9-867d7292578d
                email: 
                  type: string
                  example: test@example.com
                name:
                  type: string
                  example: Guest
        authorization:
          $ref: '#/components/schemas/Authorization'
    RefreshToken:
        type: object
        properties:
          message:
            type: string
            example: success
          authorization:
            $ref: '#/components/schemas/Authorization'
  requestBodies:
    Register:
      description: 註冊你的帳號密碼
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterRequest'
    Login:
      description: 輸入你的帳號(email)、密碼(password)
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginRequest'
    AddComment:
      description: 新增留言
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostRequest'
    AddReply:
      description: 新增回覆
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReplyPostRequest'
    PutModifyComment:
      description: 修改留言
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PutRequest'
  responses:
    '401':
      description: token驗證失敗
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageResponse'
          example:
            success: false
            message: Unauthorized
    '404':
      description: 找不到這篇留言
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageResponse'
          example:
            success: false
            message: Requested resource not found
    '500':
      description: 伺服器錯誤
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageResponse'
          example:
            success: false
            message: Internal server error.
  
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer